{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u0439\\u043B\\u044B\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\\\u0423\\u043D\\u0438\\u0432\\u0435\\u0440\\u0441\\u0438\\u0442\\u0435\\u0442\\\\HITs\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\2 \\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440\\\\React\\\\react-start\\\\src\\\\components\\\\Tree.jsx\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FolderComponent = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: AddFolder,\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u0430\\u043F\\u043A\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), folders.map(folder => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: folder.name,\n        onChange: e => {\n          const updatedFolders = folders.map(f => {\n            if (f.id === folder.id) {\n              return {\n                ...f,\n                name: e.target.value\n              };\n            }\n            return f;\n          });\n          setFolders(updatedFolders);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => DeleteFolder(folder.id),\n        children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)]\n    }, folder.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = FolderComponent;\nexport default FolderComponent;\nvar _c;\n$RefreshReg$(_c, \"FolderComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FolderComponent","children","onClick","AddFolder","fileName","_jsxFileName","lineNumber","columnNumber","folders","map","folder","type","value","name","onChange","e","updatedFolders","f","id","target","setFolders","DeleteFolder","_c","$RefreshReg$"],"sources":["D:/Файлы/Документы/Университет/HITs/2 курс/2 семестр/React/react-start/src/components/Tree.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst FolderComponent = () => {\r\n  return (\r\n    <div>\r\n      <button onClick={AddFolder}>Добавить папку</button>\r\n      {folders.map(folder => (\r\n        <div key={folder.id}>\r\n          <input\r\n            type=\"text\"\r\n            value={folder.name}\r\n            onChange={(e) => {\r\n              const updatedFolders = folders.map(f => {\r\n                if (f.id === folder.id) {\r\n                  return { ...f, name: e.target.value };\r\n                }\r\n                return f;\r\n              });\r\n              setFolders(updatedFolders);\r\n            }}\r\n          />\r\n          <button onClick={() => DeleteFolder(folder.id)}>Удалить</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FolderComponent;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC5B,oBACED,OAAA;IAAAE,QAAA,gBACEF,OAAA;MAAQG,OAAO,EAAEC,SAAU;MAAAF,QAAA,EAAC;IAAc;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAClDC,OAAO,CAACC,GAAG,CAACC,MAAM,iBACjBX,OAAA;MAAAE,QAAA,gBACEF,OAAA;QACEY,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEF,MAAM,CAACG,IAAK;QACnBC,QAAQ,EAAGC,CAAC,IAAK;UACf,MAAMC,cAAc,GAAGR,OAAO,CAACC,GAAG,CAACQ,CAAC,IAAI;YACtC,IAAIA,CAAC,CAACC,EAAE,KAAKR,MAAM,CAACQ,EAAE,EAAE;cACtB,OAAO;gBAAE,GAAGD,CAAC;gBAAEJ,IAAI,EAAEE,CAAC,CAACI,MAAM,CAACP;cAAM,CAAC;YACvC;YACA,OAAOK,CAAC;UACV,CAAC,CAAC;UACFG,UAAU,CAACJ,cAAc,CAAC;QAC5B;MAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFR,OAAA;QAAQG,OAAO,EAAEA,CAAA,KAAMmB,YAAY,CAACX,MAAM,CAACQ,EAAE,CAAE;QAAAjB,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAdxDG,MAAM,CAACQ,EAAE;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAed,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACe,EAAA,GAxBItB,eAAe;AA0BrB,eAAeA,eAAe;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u0439\\u043B\\u044B\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\\\u0423\\u043D\\u0438\\u0432\\u0435\\u0440\\u0441\\u0438\\u0442\\u0435\\u0442\\\\HITs\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\2 \\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440\\\\React\\\\react-start\\\\src\\\\components\\\\Tree.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FolderComponent = () => {\n  _s();\n  const [folders, setFolders] = useState([]);\n  const [newFolderName, setNewFolderName] = useState('');\n  const handleAddFolder = () => {\n    const newFolder = {\n      id: folders.length + 1,\n      name: newFolderName\n    };\n    setFolders([...folders, newFolder]);\n    setNewFolderName('');\n  };\n  const handleDeleteFolder = folderId => {\n    const updatedFolders = folders.filter(folder => folder.id !== folderId);\n    setFolders(updatedFolders);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddFolder,\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u0430\\u043F\\u043A\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), folders.map(folder => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: folder.name,\n        onChange: e => {\n          const updatedFolders = folders.map(f => {\n            if (f.id === folder.id) {\n              return {\n                ...f,\n                name: e.target.value\n              };\n            }\n            return f;\n          });\n          setFolders(updatedFolders);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDeleteFolder(folder.id),\n        children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, folder.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(FolderComponent, \"yIkMdUWl6MjCWMvLa97Ca6nQGz0=\");\n_c = FolderComponent;\nexport default FolderComponent;\nvar _c;\n$RefreshReg$(_c, \"FolderComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FolderComponent","_s","folders","setFolders","newFolderName","setNewFolderName","handleAddFolder","newFolder","id","length","name","handleDeleteFolder","folderId","updatedFolders","filter","folder","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","type","value","onChange","e","f","target","_c","$RefreshReg$"],"sources":["D:/Файлы/Документы/Университет/HITs/2 курс/2 семестр/React/react-start/src/components/Tree.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst FolderComponent = () => {\r\n  const [folders, setFolders] = useState([]);\r\n  const [newFolderName, setNewFolderName] = useState('');\r\n\r\n  const handleAddFolder = () => {\r\n    const newFolder = {\r\n      id: folders.length + 1,\r\n      name: newFolderName\r\n    };\r\n    setFolders([...folders, newFolder]);\r\n    setNewFolderName('');\r\n  };\r\n\r\n  const handleDeleteFolder = (folderId) => {\r\n    const updatedFolders = folders.filter(folder => folder.id !== folderId);\r\n    setFolders(updatedFolders);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleAddFolder}>Добавить папку</button>\r\n      {folders.map(folder => (\r\n        <div key={folder.id}>\r\n          <input\r\n            type=\"text\"\r\n            value={folder.name}\r\n            onChange={(e) => {\r\n              const updatedFolders = folders.map(f => {\r\n                if (f.id === folder.id) {\r\n                  return { ...f, name: e.target.value };\r\n                }\r\n                return f;\r\n              });\r\n              setFolders(updatedFolders);\r\n            }}\r\n          />\r\n          <button onClick={() => handleDeleteFolder(folder.id)}>Удалить</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FolderComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMS,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,SAAS,GAAG;MAChBC,EAAE,EAAEN,OAAO,CAACO,MAAM,GAAG,CAAC;MACtBC,IAAI,EAAEN;IACR,CAAC;IACDD,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEK,SAAS,CAAC,CAAC;IACnCF,gBAAgB,CAAC,EAAE,CAAC;EACtB,CAAC;EAED,MAAMM,kBAAkB,GAAIC,QAAQ,IAAK;IACvC,MAAMC,cAAc,GAAGX,OAAO,CAACY,MAAM,CAACC,MAAM,IAAIA,MAAM,CAACP,EAAE,KAAKI,QAAQ,CAAC;IACvET,UAAU,CAACU,cAAc,CAAC;EAC5B,CAAC;EAED,oBACEd,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAQkB,OAAO,EAAEX,eAAgB;MAAAU,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACxDnB,OAAO,CAACoB,GAAG,CAACP,MAAM,iBACjBhB,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QACEwB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAET,MAAM,CAACL,IAAK;QACnBe,QAAQ,EAAGC,CAAC,IAAK;UACf,MAAMb,cAAc,GAAGX,OAAO,CAACoB,GAAG,CAACK,CAAC,IAAI;YACtC,IAAIA,CAAC,CAACnB,EAAE,KAAKO,MAAM,CAACP,EAAE,EAAE;cACtB,OAAO;gBAAE,GAAGmB,CAAC;gBAAEjB,IAAI,EAAEgB,CAAC,CAACE,MAAM,CAACJ;cAAM,CAAC;YACvC;YACA,OAAOG,CAAC;UACV,CAAC,CAAC;UACFxB,UAAU,CAACU,cAAc,CAAC;QAC5B;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFtB,OAAA;QAAQkB,OAAO,EAAEA,CAAA,KAAMN,kBAAkB,CAACI,MAAM,CAACP,EAAE,CAAE;QAAAQ,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAd9DN,MAAM,CAACP,EAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAed,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACpB,EAAA,CAzCID,eAAe;AAAA6B,EAAA,GAAf7B,eAAe;AA2CrB,eAAeA,eAAe;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
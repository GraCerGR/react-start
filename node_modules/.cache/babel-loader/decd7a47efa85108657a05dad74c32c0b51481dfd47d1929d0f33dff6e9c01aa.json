{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u0439\\u043B\\u044B\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\\\u0423\\u043D\\u0438\\u0432\\u0435\\u0440\\u0441\\u0438\\u0442\\u0435\\u0442\\\\HITs\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\2 \\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440\\\\React\\\\react-start\\\\src\\\\components\\\\Tree.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Folder = ({\n  folder\n}) => {\n  _s();\n  const [editingName, setEditingName] = useState(false);\n  const [newName, setNewName] = useState(folder.name);\n  const handleEditName = () => {\n    setEditingName(true);\n  };\n  const handleChangeName = e => {\n    setNewName(e.target.value);\n  };\n  const handleSaveName = () => {\n    // Добавьте здесь логику для сохранения нового имени папки\n    console.log('Сохранить новое имя:', newName);\n    setEditingName(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: editingName ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newName,\n        onChange: handleChangeName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSaveName,\n        children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: folder.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEditName,\n        children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Folder, \"S1NQj/e0DPVu16I3/rggKc3XXKc=\");\n_c = Folder;\nexport default Folder;\nvar _c;\n$RefreshReg$(_c, \"Folder\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Folder","folder","_s","editingName","setEditingName","newName","setNewName","name","handleEditName","handleChangeName","e","target","value","handleSaveName","console","log","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Файлы/Документы/Университет/HITs/2 курс/2 семестр/React/react-start/src/components/Tree.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Folder = ({ folder }) => {\r\n  const [editingName, setEditingName] = useState(false);\r\n  const [newName, setNewName] = useState(folder.name);\r\n\r\n  const handleEditName = () => {\r\n    setEditingName(true);\r\n  };\r\n\r\n  const handleChangeName = (e) => {\r\n    setNewName(e.target.value);\r\n  };\r\n\r\n  const handleSaveName = () => {\r\n    // Добавьте здесь логику для сохранения нового имени папки\r\n    console.log('Сохранить новое имя:', newName);\r\n    setEditingName(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {editingName ? (\r\n        <div>\r\n          <input type=\"text\" value={newName} onChange={handleChangeName} />\r\n          <button onClick={handleSaveName}>Сохранить</button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <span>{folder.name}</span>\r\n          <button onClick={handleEditName}>Редактировать</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Folder;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAACI,MAAM,CAACM,IAAI,CAAC;EAEnD,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3BJ,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMK,gBAAgB,GAAIC,CAAC,IAAK;IAC9BJ,UAAU,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B;IACAC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEV,OAAO,CAAC;IAC5CD,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,oBACEL,OAAA;IAAAiB,QAAA,EACGb,WAAW,gBACVJ,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAOkB,IAAI,EAAC,MAAM;QAACL,KAAK,EAAEP,OAAQ;QAACa,QAAQ,EAAET;MAAiB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjEvB,OAAA;QAAQwB,OAAO,EAAEV,cAAe;QAAAG,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,gBAENvB,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAOf,MAAM,CAACM;MAAI;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1BvB,OAAA;QAAQwB,OAAO,EAAEf,cAAe;QAAAQ,QAAA,EAAC;MAAa;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACpB,EAAA,CAjCIF,MAAM;AAAAwB,EAAA,GAANxB,MAAM;AAmCZ,eAAeA,MAAM;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u0439\\u043B\\u044B\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\\\u0423\\u043D\\u0438\\u0432\\u0435\\u0440\\u0441\\u0438\\u0442\\u0435\\u0442\\\\HITs\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\2 \\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440\\\\React\\\\react-start\\\\src\\\\components\\\\Tree.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Folder = ({\n  folder,\n  onDelete,\n  onRename\n}) => {};\n_c = Folder;\nconst TreeView = () => {\n  _s();\n  const [folders, setFolders] = useState([]);\n  const deleteFolder = id => {\n    const updatedFolders = folders.filter(folder => folder.id !== id);\n    setFolders(updatedFolders);\n  };\n  const renameFolder = (id, newName) => {\n    const updatedFolders = folders.map(folder => folder.id === id ? {\n      ...folder,\n      name: newName\n    } : folder);\n    setFolders(updatedFolders);\n  };\n  const addSubfolder = parentId => {\n    const updatedFolders = folders.map(folder => {\n      if (folder.id === parentId) {\n        const newSubfolder = {\n          id: folder.subfolders.length + 1,\n          name: `Subfolder ${folder.subfolders.length + 1}`,\n          subfolders: []\n        };\n        return {\n          ...folder,\n          subfolders: [...folder.subfolders, newSubfolder]\n        };\n      }\n      return folder;\n    });\n    setFolders(updatedFolders);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setFolders([...folders, {\n        id: folders.length + 1,\n        name: `Folder ${folders.length + 1}`,\n        subfolders: []\n      }]),\n      children: \"Add Folder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), folders.map(folder => /*#__PURE__*/_jsxDEV(Folder, {\n      folder: folder,\n      onAddSubfolder: () => addSubfolder(folder.id),\n      onDelete: deleteFolder,\n      onRename: renameFolder\n    }, folder.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(TreeView, \"Rjz9GJvEnyYt0ASVPRz+KMxdL/g=\");\n_c2 = TreeView;\nexport default TreeView;\nvar _c, _c2;\n$RefreshReg$(_c, \"Folder\");\n$RefreshReg$(_c2, \"TreeView\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Folder","folder","onDelete","onRename","_c","TreeView","_s","folders","setFolders","deleteFolder","id","updatedFolders","filter","renameFolder","newName","map","name","addSubfolder","parentId","newSubfolder","subfolders","length","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onAddSubfolder","_c2","$RefreshReg$"],"sources":["D:/Файлы/Документы/Университет/HITs/2 курс/2 семестр/React/react-start/src/components/Tree.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Folder = ({ folder, onDelete, onRename }) => {\r\n\r\n};\r\n\r\nconst TreeView = () => {\r\n  const [folders, setFolders] = useState([\r\n  ]);\r\n\r\n  const deleteFolder = (id) => {\r\n    const updatedFolders = folders.filter((folder) => folder.id !== id);\r\n    setFolders(updatedFolders);\r\n  };\r\n\r\n  const renameFolder = (id, newName) => {\r\n    const updatedFolders = folders.map((folder) =>\r\n      folder.id === id ? { ...folder, name: newName } : folder\r\n    );\r\n    setFolders(updatedFolders);\r\n  };\r\n\r\n  const addSubfolder = (parentId) => {\r\n    const updatedFolders = folders.map((folder) => {\r\n      if (folder.id === parentId) {\r\n        const newSubfolder = {\r\n          id: folder.subfolders.length + 1,\r\n          name: `Subfolder ${folder.subfolders.length + 1}`,\r\n          subfolders: [],\r\n        };\r\n        return {\r\n          ...folder,\r\n          subfolders: [...folder.subfolders, newSubfolder],\r\n        };\r\n      }\r\n      return folder;\r\n    });\r\n    setFolders(updatedFolders);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => setFolders([...folders, { id: folders.length + 1, name: `Folder ${folders.length + 1}`, subfolders: [] }])}>\r\n        Add Folder\r\n      </button>\r\n      {folders.map((folder) => (\r\n        <Folder\r\n          key={folder.id}\r\n          folder={folder}\r\n          onAddSubfolder={() => addSubfolder(folder.id)}\r\n          onDelete={deleteFolder}\r\n          onRename={renameFolder}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TreeView;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGA,CAAC;EAAEC,MAAM;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK,CAEnD,CAAC;AAACC,EAAA,GAFIJ,MAAM;AAIZ,MAAMK,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EACtC,CAAC;EAEF,MAAMY,YAAY,GAAIC,EAAE,IAAK;IAC3B,MAAMC,cAAc,GAAGJ,OAAO,CAACK,MAAM,CAAEX,MAAM,IAAKA,MAAM,CAACS,EAAE,KAAKA,EAAE,CAAC;IACnEF,UAAU,CAACG,cAAc,CAAC;EAC5B,CAAC;EAED,MAAME,YAAY,GAAGA,CAACH,EAAE,EAAEI,OAAO,KAAK;IACpC,MAAMH,cAAc,GAAGJ,OAAO,CAACQ,GAAG,CAAEd,MAAM,IACxCA,MAAM,CAACS,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGT,MAAM;MAAEe,IAAI,EAAEF;IAAQ,CAAC,GAAGb,MACpD,CAAC;IACDO,UAAU,CAACG,cAAc,CAAC;EAC5B,CAAC;EAED,MAAMM,YAAY,GAAIC,QAAQ,IAAK;IACjC,MAAMP,cAAc,GAAGJ,OAAO,CAACQ,GAAG,CAAEd,MAAM,IAAK;MAC7C,IAAIA,MAAM,CAACS,EAAE,KAAKQ,QAAQ,EAAE;QAC1B,MAAMC,YAAY,GAAG;UACnBT,EAAE,EAAET,MAAM,CAACmB,UAAU,CAACC,MAAM,GAAG,CAAC;UAChCL,IAAI,EAAE,aAAaf,MAAM,CAACmB,UAAU,CAACC,MAAM,GAAG,CAAC,EAAE;UACjDD,UAAU,EAAE;QACd,CAAC;QACD,OAAO;UACL,GAAGnB,MAAM;UACTmB,UAAU,EAAE,CAAC,GAAGnB,MAAM,CAACmB,UAAU,EAAED,YAAY;QACjD,CAAC;MACH;MACA,OAAOlB,MAAM;IACf,CAAC,CAAC;IACFO,UAAU,CAACG,cAAc,CAAC;EAC5B,CAAC;EAED,oBACEZ,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAQwB,OAAO,EAAEA,CAAA,KAAMf,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAE;QAAEG,EAAE,EAAEH,OAAO,CAACc,MAAM,GAAG,CAAC;QAAEL,IAAI,EAAE,UAAUT,OAAO,CAACc,MAAM,GAAG,CAAC,EAAE;QAAED,UAAU,EAAE;MAAG,CAAC,CAAC,CAAE;MAAAE,QAAA,EAAC;IAEnI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRpB,OAAO,CAACQ,GAAG,CAAEd,MAAM,iBAClBF,OAAA,CAACC,MAAM;MAELC,MAAM,EAAEA,MAAO;MACf2B,cAAc,EAAEA,CAAA,KAAMX,YAAY,CAAChB,MAAM,CAACS,EAAE,CAAE;MAC9CR,QAAQ,EAAEO,YAAa;MACvBN,QAAQ,EAAEU;IAAa,GAJlBZ,MAAM,CAACS,EAAE;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKf,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACrB,EAAA,CAlDID,QAAQ;AAAAwB,GAAA,GAARxB,QAAQ;AAoDd,eAAeA,QAAQ;AAAC,IAAAD,EAAA,EAAAyB,GAAA;AAAAC,YAAA,CAAA1B,EAAA;AAAA0B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
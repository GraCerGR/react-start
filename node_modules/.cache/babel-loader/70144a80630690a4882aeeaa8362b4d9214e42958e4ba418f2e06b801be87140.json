{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u0439\\u043B\\u044B\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\\\u0423\\u043D\\u0438\\u0432\\u0435\\u0440\\u0441\\u0438\\u0442\\u0435\\u0442\\\\HITs\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\2 \\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440\\\\React\\\\react-start\\\\src\\\\components\\\\Tree.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TreeComponent = () => {\n  _s();\n  const [tree, setTree] = useState([]);\n  const handleAddElement = parentId => {\n    const newElement = {\n      id: Date.now(),\n      name: `Element ${parentId ? parentId : tree.length + 1}`,\n      children: []\n    };\n    if (parentId) {\n      const updatedTree = tree.map(node => {\n        if (node.id === parentId) {\n          return {\n            ...node,\n            children: [...node.children, newElement]\n          };\n        }\n        return node;\n      });\n      setTree(updatedTree);\n    } else {\n      setTree([...tree, newElement]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleAddElement(),\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), tree.map(node => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAddElement(node.id),\n        children: [\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C2 \", node.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), node.children.map(child => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: child.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)\n      }, child.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this))]\n    }, node.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(TreeComponent, \"ugp5+nmxsx92BotdmLSIj4zaERo=\");\n_c = TreeComponent;\nexport default TreeComponent;\nvar _c;\n$RefreshReg$(_c, \"TreeComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TreeComponent","_s","tree","setTree","handleAddElement","parentId","newElement","id","Date","now","name","length","children","updatedTree","map","node","onClick","fileName","_jsxFileName","lineNumber","columnNumber","child","_c","$RefreshReg$"],"sources":["D:/Файлы/Документы/Университет/HITs/2 курс/2 семестр/React/react-start/src/components/Tree.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst TreeComponent = () => {\r\n  const [tree, setTree] = useState([]);\r\n\r\n  const handleAddElement = (parentId) => {\r\n    const newElement = {\r\n      id: Date.now(),\r\n      name: `Element ${parentId ? parentId : tree.length + 1}`,\r\n      children: []\r\n    };\r\n\r\n    if (parentId) {\r\n      const updatedTree = tree.map(node => {\r\n        if (node.id === parentId) {\r\n          return {\r\n            ...node,\r\n            children: [...node.children, newElement]\r\n          };\r\n        }\r\n        return node;\r\n      });\r\n      setTree(updatedTree);\r\n    } else {\r\n      setTree([...tree, newElement]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => handleAddElement()}>Добавить1</button>\r\n      {tree.map(node => (\r\n        <div key={node.id}>\r\n          <span>{node.name}</span>\r\n          <button onClick={() => handleAddElement(node.id)}>Добавить2 {node.name}</button>\r\n          {node.children.map(child => (\r\n            <div key={child.id}>\r\n              <span>{child.name}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TreeComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMO,gBAAgB,GAAIC,QAAQ,IAAK;IACrC,MAAMC,UAAU,GAAG;MACjBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdC,IAAI,EAAE,WAAWL,QAAQ,GAAGA,QAAQ,GAAGH,IAAI,CAACS,MAAM,GAAG,CAAC,EAAE;MACxDC,QAAQ,EAAE;IACZ,CAAC;IAED,IAAIP,QAAQ,EAAE;MACZ,MAAMQ,WAAW,GAAGX,IAAI,CAACY,GAAG,CAACC,IAAI,IAAI;QACnC,IAAIA,IAAI,CAACR,EAAE,KAAKF,QAAQ,EAAE;UACxB,OAAO;YACL,GAAGU,IAAI;YACPH,QAAQ,EAAE,CAAC,GAAGG,IAAI,CAACH,QAAQ,EAAEN,UAAU;UACzC,CAAC;QACH;QACA,OAAOS,IAAI;MACb,CAAC,CAAC;MACFZ,OAAO,CAACU,WAAW,CAAC;IACtB,CAAC,MAAM;MACLV,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEI,UAAU,CAAC,CAAC;IAChC;EACF,CAAC;EAED,oBACEP,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAQiB,OAAO,EAAEA,CAAA,KAAMZ,gBAAgB,CAAC,CAAE;MAAAQ,QAAA,EAAC;IAAS;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC5DlB,IAAI,CAACY,GAAG,CAACC,IAAI,iBACZhB,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,EAAOG,IAAI,CAACL;MAAI;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxBrB,OAAA;QAAQiB,OAAO,EAAEA,CAAA,KAAMZ,gBAAgB,CAACW,IAAI,CAACR,EAAE,CAAE;QAAAK,QAAA,GAAC,oDAAU,EAACG,IAAI,CAACL,IAAI;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,EAC/EL,IAAI,CAACH,QAAQ,CAACE,GAAG,CAACO,KAAK,iBACtBtB,OAAA;QAAAa,QAAA,eACEb,OAAA;UAAAa,QAAA,EAAOS,KAAK,CAACX;QAAI;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC,GADjBC,KAAK,CAACd,EAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACN,CAAC;IAAA,GAPML,IAAI,CAACR,EAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQZ,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACnB,EAAA,CA1CID,aAAa;AAAAsB,EAAA,GAAbtB,aAAa;AA4CnB,eAAeA,aAAa;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
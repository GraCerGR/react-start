{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u0439\\u043B\\u044B\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\\\u0423\\u043D\\u0438\\u0432\\u0435\\u0440\\u0441\\u0438\\u0442\\u0435\\u0442\\\\HITs\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\2 \\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440\\\\React\\\\react-start\\\\src\\\\components\\\\Tree.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TreeComponent = () => {\n  _s();\n  const [tree, setTree] = useState([]);\n  const handleAddElement = (parentId, currentTree) => {\n    const newElement = {\n      id: Date.now(),\n      name: `Element ${parentId ? parentId : tree.length + 1}`,\n      children: []\n    };\n    const updatedTree = currentTree.map(node => {\n      if (node.id === parentId) {\n        return {\n          ...node,\n          children: [...node.children, newElement]\n        };\n      } else if (node.children.length > 0) {\n        return {\n          ...node,\n          children: handleAddElement(parentId, node.children)\n        };\n      }\n      return node;\n    });\n    return updatedTree;\n  };\n  const handleAddRootElement = () => {\n    setTree([...tree, {\n      id: Date.now(),\n      name: `Element ${tree.length + 1}`,\n      children: []\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddRootElement,\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), tree.map(node => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTree(handleAddElement(node.id, tree)),\n        children: [\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C2 \", node.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), node.children.map(child => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: child.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)\n      }, child.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this))]\n    }, node.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(TreeComponent, \"ugp5+nmxsx92BotdmLSIj4zaERo=\");\n_c = TreeComponent;\nexport default TreeComponent;\nvar _c;\n$RefreshReg$(_c, \"TreeComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TreeComponent","_s","tree","setTree","handleAddElement","parentId","currentTree","newElement","id","Date","now","name","length","children","updatedTree","map","node","handleAddRootElement","onClick","fileName","_jsxFileName","lineNumber","columnNumber","child","_c","$RefreshReg$"],"sources":["D:/Файлы/Документы/Университет/HITs/2 курс/2 семестр/React/react-start/src/components/Tree.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst TreeComponent = () => {\r\n  const [tree, setTree] = useState([]);\r\n\r\n  const handleAddElement = (parentId, currentTree) => {\r\n    const newElement = {\r\n      id: Date.now(),\r\n      name: `Element ${parentId ? parentId : tree.length + 1}`,\r\n      children: []\r\n    };\r\n\r\n    const updatedTree = currentTree.map(node => {\r\n      if (node.id === parentId) {\r\n        return {\r\n          ...node,\r\n          children: [...node.children, newElement]\r\n        };\r\n      } else if (node.children.length > 0) {\r\n        return {\r\n          ...node,\r\n          children: handleAddElement(parentId, node.children)\r\n        };\r\n      }\r\n      return node;\r\n    });\r\n\r\n    return updatedTree;\r\n  };\r\n\r\n  const handleAddRootElement = () => {\r\n    setTree([...tree, { id: Date.now(), name: `Element ${tree.length + 1}`, children: [] }]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleAddRootElement}>Добавить1</button>\r\n      {tree.map(node => (\r\n        <div key={node.id}>\r\n          <span>{node.name}</span>\r\n          <button onClick={() => setTree(handleAddElement(node.id, tree))}>Добавить2 {node.name}</button>\r\n          {node.children.map(child => (\r\n            <div key={child.id}>\r\n              <span>{child.name}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TreeComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
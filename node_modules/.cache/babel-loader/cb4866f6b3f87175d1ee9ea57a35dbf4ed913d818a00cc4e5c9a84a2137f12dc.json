{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u0439\\u043B\\u044B\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\\\u0423\\u043D\\u0438\\u0432\\u0435\\u0440\\u0441\\u0438\\u0442\\u0435\\u0442\\\\HITs\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\2 \\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440\\\\React\\\\react-start\\\\src\\\\components\\\\Tree.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TreeComponent = () => {\n  _s();\n  const [tree, setTree] = useState([]);\n  const addFolder = parentId => {\n    const newFolder = {\n      id: `Folder ${parentId}.${tree.length + 1}`,\n      name: `Folder ${parentId}.${tree.length + 1}`\n    };\n    setTree([...tree, newFolder]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addFolder('root'),\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u0430\\u043F\\u043A\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), tree.map(folder => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: folder.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addFolder(folder.id),\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u043E\\u0434\\u043F\\u0430\\u043F\\u043A\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), folder.children && folder.children.map(child => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: child.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this)\n      }, child.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this))]\n    }, folder.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(TreeComponent, \"ugp5+nmxsx92BotdmLSIj4zaERo=\");\n_c = TreeComponent;\nexport default TreeComponent;\nvar _c;\n$RefreshReg$(_c, \"TreeComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TreeComponent","_s","tree","setTree","addFolder","parentId","newFolder","id","length","name","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","folder","child","_c","$RefreshReg$"],"sources":["D:/Файлы/Документы/Университет/HITs/2 курс/2 семестр/React/react-start/src/components/Tree.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst TreeComponent = () => {\r\n  const [tree, setTree] = useState([]);\r\n\r\n  const addFolder = (parentId) => {\r\n    const newFolder = {\r\n        id: `Folder ${parentId}.${tree.length + 1}`,\r\n        name: `Folder ${parentId}.${tree.length + 1}`\r\n    };\r\n    setTree([...tree, newFolder]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => addFolder('root')}>Добавить папку</button>\r\n      {tree.map(folder => (\r\n        <div key={folder.id}>\r\n          <span>{folder.name}</span>\r\n          <button onClick={() => addFolder(folder.id)}>Добавить подпапку</button>\r\n          {folder.children && folder.children.map(child => (\r\n            <div key={child.id}>\r\n              <span>{child.name}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TreeComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMO,SAAS,GAAIC,QAAQ,IAAK;IAC9B,MAAMC,SAAS,GAAG;MACdC,EAAE,EAAE,UAAUF,QAAQ,IAAIH,IAAI,CAACM,MAAM,GAAG,CAAC,EAAE;MAC3CC,IAAI,EAAE,UAAUJ,QAAQ,IAAIH,IAAI,CAACM,MAAM,GAAG,CAAC;IAC/C,CAAC;IACDL,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEI,SAAS,CAAC,CAAC;EAC/B,CAAC;EAED,oBACEP,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAQY,OAAO,EAAEA,CAAA,KAAMP,SAAS,CAAC,MAAM,CAAE;MAAAM,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAChEb,IAAI,CAACc,GAAG,CAACC,MAAM,iBACdlB,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAAW,QAAA,EAAOO,MAAM,CAACR;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1BhB,OAAA;QAAQY,OAAO,EAAEA,CAAA,KAAMP,SAAS,CAACa,MAAM,CAACV,EAAE,CAAE;QAAAG,QAAA,EAAC;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACtEE,MAAM,CAACP,QAAQ,IAAIO,MAAM,CAACP,QAAQ,CAACM,GAAG,CAACE,KAAK,iBAC3CnB,OAAA;QAAAW,QAAA,eACEX,OAAA;UAAAW,QAAA,EAAOQ,KAAK,CAACT;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC,GADjBG,KAAK,CAACX,EAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACN,CAAC;IAAA,GAPME,MAAM,CAACV,EAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQd,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACd,EAAA,CA3BID,aAAa;AAAAmB,EAAA,GAAbnB,aAAa;AA6BnB,eAAeA,aAAa;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u0439\\u043B\\u044B\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\\\u0423\\u043D\\u0438\\u0432\\u0435\\u0440\\u0441\\u0438\\u0442\\u0435\\u0442\\\\HITs\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\2 \\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440\\\\React\\\\react-start\\\\src\\\\components\\\\Tree.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Folder = ({\n  folder,\n  onAddSubfolder,\n  onDelete,\n  onRename\n}) => {\n  _s();\n  const [subfolders, setSubfolders] = useState([]);\n  const addSubfolder = () => {\n    const newSubfolder = {\n      id: subfolders.length + 1,\n      name: `Subfolder ${subfolders.length + 1}`,\n      subfolders: []\n    };\n    setSubfolders([...subfolders, newSubfolder]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: folder.name,\n        onChange: e => onRename(folder.id, e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onDelete(folder.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addSubfolder,\n      children: \"Add Subfolder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), subfolders.map(subfolder => /*#__PURE__*/_jsxDEV(Folder, {\n      folder: subfolder,\n      onAddSubfolder: addSubfolder,\n      onDelete: onDelete,\n      onRename: onRename\n    }, subfolder.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this);\n};\n_s(Folder, \"R1e1nMcVNmj/EpWpg7xKFeU6pyA=\");\n_c = Folder;\nconst TreeView = () => {\n  _s2();\n  const [folders, setFolders] = useState([{\n    id: 1,\n    name: 'Folder 1',\n    subfolders: []\n  }, {\n    id: 2,\n    name: 'Folder 2',\n    subfolders: []\n  }]);\n  const deleteFolder = id => {\n    const updatedFolders = folders.filter(folder => folder.id !== id);\n    setFolders(updatedFolders);\n  };\n  const renameFolder = (id, newName) => {\n    const updatedFolders = folders.map(folder => folder.id === id ? {\n      ...folder,\n      name: newName\n    } : folder);\n    setFolders(updatedFolders);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setFolders([...folders, {\n        id: folders.length + 1,\n        name: `Folder ${folders.length + 1}`,\n        subfolders: []\n      }]),\n      children: \"Add Folder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), folders.map(folder => /*#__PURE__*/_jsxDEV(Folder, {\n      folder: folder,\n      onAddSubfolder: () => addSubfolder(folder.id),\n      onDelete: deleteFolder,\n      onRename: renameFolder\n    }, folder.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }, this);\n};\n_s2(TreeView, \"F3aVUUQEW/w7KUcLCqHHxlS3C4k=\");\n_c2 = TreeView;\nexport default TreeView;\nvar _c, _c2;\n$RefreshReg$(_c, \"Folder\");\n$RefreshReg$(_c2, \"TreeView\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Folder","folder","onAddSubfolder","onDelete","onRename","_s","subfolders","setSubfolders","addSubfolder","newSubfolder","id","length","name","style","marginLeft","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","subfolder","_c","TreeView","_s2","folders","setFolders","deleteFolder","updatedFolders","filter","renameFolder","newName","_c2","$RefreshReg$"],"sources":["D:/Файлы/Документы/Университет/HITs/2 курс/2 семестр/React/react-start/src/components/Tree.jsx"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\n\r\nconst Folder = ({ folder, onAddSubfolder, onDelete, onRename }) => {\r\n    const [subfolders, setSubfolders] = useState([]);\r\n  \r\n    const addSubfolder = () => {\r\n      const newSubfolder = {\r\n        id: subfolders.length + 1,\r\n        name: `Subfolder ${subfolders.length + 1}`,\r\n        subfolders: [],\r\n      };\r\n      setSubfolders([...subfolders, newSubfolder]);\r\n    };\r\n  \r\n    return (\r\n      <div style={{ marginLeft: 20 }}>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={folder.name}\r\n            onChange={(e) => onRename(folder.id, e.target.value)}\r\n          />\r\n          <button onClick={() => onDelete(folder.id)}>Delete</button>\r\n        </div>\r\n        <button onClick={addSubfolder}>Add Subfolder</button>\r\n        {subfolders.map((subfolder) => (\r\n          <Folder\r\n            key={subfolder.id}\r\n            folder={subfolder}\r\n            onAddSubfolder={addSubfolder}\r\n            onDelete={onDelete}\r\n            onRename={onRename}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  const TreeView = () => {\r\n    const [folders, setFolders] = useState([\r\n      { id: 1, name: 'Folder 1', subfolders: [] },\r\n      { id: 2, name: 'Folder 2', subfolders: [] },\r\n    ]);\r\n  \r\n    const deleteFolder = (id) => {\r\n      const updatedFolders = folders.filter((folder) => folder.id !== id);\r\n      setFolders(updatedFolders);\r\n    };\r\n  \r\n    const renameFolder = (id, newName) => {\r\n      const updatedFolders = folders.map((folder) =>\r\n        folder.id === id ? { ...folder, name: newName } : folder\r\n      );\r\n      setFolders(updatedFolders);\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <button onClick={() => setFolders([...folders, { id: folders.length + 1, name: `Folder ${folders.length + 1}`, subfolders: [] }])}>\r\n          Add Folder\r\n        </button>\r\n        {folders.map((folder) => (\r\n          <Folder\r\n            key={folder.id}\r\n            folder={folder}\r\n            onAddSubfolder={() => addSubfolder(folder.id)}\r\n            onDelete={deleteFolder}\r\n            onRename={renameFolder}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default TreeView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
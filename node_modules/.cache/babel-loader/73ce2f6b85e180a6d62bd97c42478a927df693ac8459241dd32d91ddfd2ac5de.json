{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0424\\u0430\\u0439\\u043B\\u044B\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\\\u0423\\u043D\\u0438\\u0432\\u0435\\u0440\\u0441\\u0438\\u0442\\u0435\\u0442\\\\HITs\\\\2 \\u043A\\u0443\\u0440\\u0441\\\\2 \\u0441\\u0435\\u043C\\u0435\\u0441\\u0442\\u0440\\\\React\\\\react-start\\\\src\\\\components\\\\Tree.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TreeView = () => {\n  _s();\n  const [folders, setFolders] = useState([{\n    id: 1,\n    name: 'Folder 1',\n    children: []\n  }, {\n    id: 2,\n    name: 'Folder 2',\n    children: []\n  }]);\n  const addFolder = () => {\n    const newFolder = {\n      id: folders.length + 1,\n      name: `Folder ${folders.length + 1}`,\n      children: []\n    };\n    setFolders([...folders, newFolder]);\n  };\n  const deleteFolder = id => {\n    const updatedFolders = folders.filter(folder => folder.id !== id);\n    setFolders(updatedFolders);\n  };\n  const editFolderName = (id, newName) => {\n    const updatedFolders = folders.map(folder => folder.id === id ? {\n      ...folder,\n      name: newName\n    } : folder);\n    setFolders(updatedFolders);\n  };\n  const resetFolders = () => {\n    setFolders([{\n      id: 1,\n      name: 'Folder 1',\n      children: []\n    }, {\n      id: 2,\n      name: 'Folder 2',\n      children: []\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addFolder,\n      children: \"Add Folder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetFolders,\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), folders.map(folder => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: folder.name,\n        onChange: e => editFolderName(folder.id, e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteFolder(folder.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, folder.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(TreeView, \"3wS0DjZ4l+TYq+f2KI42W0vzNF8=\");\n_c = TreeView;\nexport default Tree;\nvar _c;\n$RefreshReg$(_c, \"TreeView\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TreeView","_s","folders","setFolders","id","name","children","addFolder","newFolder","length","deleteFolder","updatedFolders","filter","folder","editFolderName","newName","map","resetFolders","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","_c","Tree","$RefreshReg$"],"sources":["D:/Файлы/Документы/Университет/HITs/2 курс/2 семестр/React/react-start/src/components/Tree.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst TreeView = () => {\r\n  const [folders, setFolders] = useState([\r\n    { id: 1, name: 'Folder 1', children: [] },\r\n    { id: 2, name: 'Folder 2', children: [] },\r\n  ]);\r\n\r\n  const addFolder = () => {\r\n    const newFolder = {\r\n      id: folders.length + 1,\r\n      name: `Folder ${folders.length + 1}`,\r\n      children: [],\r\n    };\r\n    setFolders([...folders, newFolder]);\r\n  };\r\n\r\n  const deleteFolder = (id) => {\r\n    const updatedFolders = folders.filter((folder) => folder.id !== id);\r\n    setFolders(updatedFolders);\r\n  };\r\n\r\n  const editFolderName = (id, newName) => {\r\n    const updatedFolders = folders.map((folder) =>\r\n      folder.id === id ? { ...folder, name: newName } : folder\r\n    );\r\n    setFolders(updatedFolders);\r\n  };\r\n\r\n  const resetFolders = () => {\r\n    setFolders([\r\n      { id: 1, name: 'Folder 1', children: [] },\r\n      { id: 2, name: 'Folder 2', children: [] },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={addFolder}>Add Folder</button>\r\n      <button onClick={resetFolders}>Reset</button>\r\n      {folders.map((folder) => (\r\n        <div key={folder.id}>\r\n          <input\r\n            type=\"text\"\r\n            value={folder.name}\r\n            onChange={(e) => editFolderName(folder.id, e.target.value)}\r\n          />\r\n          <button onClick={() => deleteFolder(folder.id)}>Delete</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tree;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}